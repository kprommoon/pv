<!DOCTYPE html>

<html>
<head>
  <title>SME Kit</title>
  <!-- ** CSS ** -->
  <!-- base library -->
  <link rel="stylesheet" type="text/css" href="extjs/ext-all.css" />

  <!-- overrides to base library -->
  <link rel="stylesheet" type="text/css" href="extjs/resources/css/xtheme-gray.css" />

  <!-- page specific -->
  <link rel="stylesheet" type="text/css" href="css/style.css" />

  <!-- ** Javascript ** -->

  <!-- base library -->
  <script type="text/javascript" src="extjs/core/ext-base.js"></script>
  <script type="text/javascript" src="extjs/core/ext-all-debug.js"></script>

  <!-- extensions -->
  <script type="text/javascript" src="extjs/ux/TabCloseMenu.js"></script>

  <!-- page specific -->
  <script type="text/javascript">
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
    
    Ext.onReady(function(){
        var tab = new Ext.TabPanel({
            id: 'home',
            activeTab: 0,
            //renderTo: document.body,
            defaults: {
                closable: true
            },
            stateEvents:['add', 'remove'],
            getState:function() {
                // declare an object to save state
                var state = {};
                var x = [];
                for (i=0; i<this.items.items.length; i++) {
                    // copy desired config into state.items
                    x[i] = {
                        title: this.items.items[i].title,
                        id: this.items.items[i].id,
                        url: this.items.items[i].url
                    };
                }
                state = {items: x};
                // return state
                return state;
            },
            applyState:function(state) {
                // add those status into this tab panel
                for (i=1; i<state.items.length; i++)
                    this.add({
                        title: state.items[i].title,
                        id: state.items[i].id,
                        autoLoad: {
                            url: state.items[i].url,
                            scripts: true
                        }
                    });
            },
            items: [{
                title: 'home',
                closable: false,
                tbar: [{
                    text: 'Type 1',
                    handler: function() {
                        if (!Ext.get("Type 1")) {
                            var newTab = tab.add({
                                id: 'Type 1',
                                title: 'Type 1',
                                url: 'type1.htm',
                                autoLoad: {
                                    url: 'type1.htm',
                                    scripts: true
                                }
                            });
                            tab.setActiveTab(newTab);
                        }
                        else tab.setActiveTab(Ext.get("Type 1").id);
                    }
                },'-',{
                    text: 'Type 2',
                    handler: function() {
                        if (!Ext.get("Type 2")) {
                            var newTab = tab.add({
                                id: 'Type 2',
                                title: 'Type 2',
                                url: 'type2.htm',
                                autoLoad: {
                                    url: 'type2.htm',
                                    scripts: true
                                }
                            });
                            tab.setActiveTab(newTab);
                        }
                        else tab.setActiveTab(Ext.get("Type 2").id);
                    }
                }]
            }],
            plugins: new Ext.ux.TabCloseMenu()
        });

        var viewport = new Ext.Viewport({
            layout: 'fit',
            items: [tab]
        });
    });
  </script>
</head>

<body>
</body>

</html>
